name: TDLib ARM Release
on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit, branch or tag to checkout'
        required: false
        default: ''

jobs:
  linux:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04
    steps:
      - if: ${{ github.event.inputs.commit == 'master' || github.event.inputs.commit == '' }}
        run: |
          echo "release_name=tdlib-last-${{ matrix.distro }}_${{ matrix.arch }}" >> $GITHUB_ENV
          echo "release_version=last" >> $GITHUB_ENV
      - if: ${{ github.event.inputs.commit != 'master' && github.event.inputs.commit != '' }}
        run: |
          echo "release_name=tdlib-${{ github.event.inputs.commit }}-${{ matrix.distro }}_${{ matrix.arch }}" >> $GITHUB_ENV
          echo "release_version=${{ github.event.inputs.commit }}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/tdlib"
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/tdlib:/root/tdlib"
          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: ${{ env.release_name }}
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y make git zlib1g-dev libssl-dev gperf php-cli cmake openjdk-8-jdk-headless clang-10 libc++-dev libc++abi-dev
                ;;
              fedora*)
                dnf -y update
                dnf -y install make git zlib1g-dev libssl-dev gperf php-cli cmake openjdk-8-jdk-headless clang-10 libc++-dev libc++abi-dev
                ;;
              alpine*)
                apk update
                apk add make git zlib1g-dev libssl-dev gperf php-cli cmake openjdk-8-jdk-headless clang-10 libc++-dev libc++abi-dev
                ;;
            esac

          run: |
            cd /root
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-arm64
            find . -name *awt*


      - uses: actions/checkout@v3
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Upload artifact to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: tdlib-${{ env.release_version }}
          file: ./tdlib/${{ env.release_name }}*.tar.gz
          overwrite: true
          file_glob: true